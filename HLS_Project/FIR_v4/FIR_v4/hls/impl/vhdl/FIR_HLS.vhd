-- ==============================================================
-- Generated by Vitis HLS v2024.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity FIR_HLS is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    input_r_TDATA : IN STD_LOGIC_VECTOR (15 downto 0);
    input_r_TVALID : IN STD_LOGIC;
    input_r_TREADY : OUT STD_LOGIC;
    output_r_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
    output_r_TVALID : OUT STD_LOGIC;
    output_r_TREADY : IN STD_LOGIC );
end;


architecture behav of FIR_HLS is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "FIR_HLS_FIR_HLS,hls_ip_2024_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xck26-sfvc784-2LV-c,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=4.092333,HLS_SYN_LAT=102,HLS_SYN_TPT=none,HLS_SYN_MEM=2,HLS_SYN_DSP=0,HLS_SYN_FF=918,HLS_SYN_LUT=1633,HLS_VERSION=2024_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (10 downto 0) := "00000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (10 downto 0) := "00000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (10 downto 0) := "00000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (10 downto 0) := "00000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (10 downto 0) := "00000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (10 downto 0) := "00001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (10 downto 0) := "00010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (10 downto 0) := "00100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (10 downto 0) := "01000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (10 downto 0) := "10000000000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv7_74 : STD_LOGIC_VECTOR (6 downto 0) := "1110100";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";

    signal ap_rst_n_inv : STD_LOGIC;
    signal mod_value : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal y2 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal H_filter_FIR_dec_40_ce0 : STD_LOGIC;
    signal H_filter_FIR_dec_40_we0 : STD_LOGIC;
    signal H_filter_FIR_dec_40_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal H_filter_FIR_dec_40_ce1 : STD_LOGIC;
    signal H_filter_FIR_dec_40_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal y1_phase1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal y1_phase2 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal y1_phase3 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal H_filter_FIR_kernel_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal H_filter_FIR_kernel_ce0 : STD_LOGIC;
    signal H_filter_FIR_kernel_we0 : STD_LOGIC;
    signal H_filter_FIR_kernel_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal H_filter_FIR_kernel_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal H_filter_FIR_kernel_ce1 : STD_LOGIC;
    signal H_filter_FIR_kernel_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal H_filter_FIR_int_40_ce0 : STD_LOGIC;
    signal H_filter_FIR_int_40_we0 : STD_LOGIC;
    signal H_filter_FIR_int_40_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal H_filter_FIR_int_40_ce1 : STD_LOGIC;
    signal H_filter_FIR_int_40_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal H_filter_FIR_dec_43_ce0 : STD_LOGIC;
    signal H_filter_FIR_dec_43_we0 : STD_LOGIC;
    signal H_filter_FIR_dec_43_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal H_filter_FIR_dec_43_ce1 : STD_LOGIC;
    signal H_filter_FIR_dec_43_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal b_FIR_dec_int_43_ce0 : STD_LOGIC;
    signal b_FIR_dec_int_43_q0 : STD_LOGIC_VECTOR (14 downto 0);
    signal H_filter_FIR_int_41_ce0 : STD_LOGIC;
    signal H_filter_FIR_int_41_we0 : STD_LOGIC;
    signal H_filter_FIR_int_41_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal H_filter_FIR_int_41_ce1 : STD_LOGIC;
    signal H_filter_FIR_int_41_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal b_FIR_dec_int_41_ce0 : STD_LOGIC;
    signal b_FIR_dec_int_41_q0 : STD_LOGIC_VECTOR (14 downto 0);
    signal H_filter_FIR_dec_42_ce0 : STD_LOGIC;
    signal H_filter_FIR_dec_42_we0 : STD_LOGIC;
    signal H_filter_FIR_dec_42_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal H_filter_FIR_dec_42_ce1 : STD_LOGIC;
    signal H_filter_FIR_dec_42_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal b_FIR_dec_int_42_ce0 : STD_LOGIC;
    signal b_FIR_dec_int_42_q0 : STD_LOGIC_VECTOR (14 downto 0);
    signal H_filter_FIR_int_42_ce0 : STD_LOGIC;
    signal H_filter_FIR_int_42_we0 : STD_LOGIC;
    signal H_filter_FIR_int_42_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal H_filter_FIR_int_42_ce1 : STD_LOGIC;
    signal H_filter_FIR_int_42_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal H_filter_FIR_dec_41_ce0 : STD_LOGIC;
    signal H_filter_FIR_dec_41_we0 : STD_LOGIC;
    signal H_filter_FIR_dec_41_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal H_filter_FIR_dec_41_ce1 : STD_LOGIC;
    signal H_filter_FIR_dec_41_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal H_filter_FIR_int_43_ce0 : STD_LOGIC;
    signal H_filter_FIR_int_43_we0 : STD_LOGIC;
    signal H_filter_FIR_int_43_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal H_filter_FIR_int_43_ce1 : STD_LOGIC;
    signal H_filter_FIR_int_43_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal input_r_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal output_r_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal grp_FIR_filter_2_fu_137_ap_return : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal mod_value_load_reg_307 : STD_LOGIC_VECTOR (1 downto 0);
    signal data_in_reg_301 : STD_LOGIC_VECTOR (15 downto 0);
    signal mod_value_load_load_fu_194_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal y_reg_314 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal grp_FIR_filter_2_fu_137_ap_start : STD_LOGIC;
    signal grp_FIR_filter_2_fu_137_ap_done : STD_LOGIC;
    signal grp_FIR_filter_2_fu_137_ap_idle : STD_LOGIC;
    signal grp_FIR_filter_2_fu_137_ap_ready : STD_LOGIC;
    signal grp_FIR_filter_2_fu_137_FIR_delays_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_FIR_filter_2_fu_137_FIR_delays_ce0 : STD_LOGIC;
    signal grp_FIR_filter_2_fu_137_FIR_delays_we0 : STD_LOGIC;
    signal grp_FIR_filter_2_fu_137_FIR_delays_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_FIR_filter_2_fu_137_FIR_delays_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_FIR_filter_2_fu_137_FIR_delays_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_FIR_filter_2_fu_137_FIR_delays_ce1 : STD_LOGIC;
    signal grp_FIR_filter_2_fu_137_FIR_delays_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_FIR_filter_2_fu_137_FIR_coe_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_FIR_filter_2_fu_137_FIR_coe_ce0 : STD_LOGIC;
    signal grp_FIR_filter_2_fu_137_FIR_coe_q0 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_FIR_filter_2_fu_137_x_n : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_FIR_filter_2_fu_137_shift : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_FIR_filter_fu_157_ap_start : STD_LOGIC;
    signal grp_FIR_filter_fu_157_ap_done : STD_LOGIC;
    signal grp_FIR_filter_fu_157_ap_idle : STD_LOGIC;
    signal grp_FIR_filter_fu_157_ap_ready : STD_LOGIC;
    signal grp_FIR_filter_fu_157_FIR_delays_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_FIR_filter_fu_157_FIR_delays_ce0 : STD_LOGIC;
    signal grp_FIR_filter_fu_157_FIR_delays_we0 : STD_LOGIC;
    signal grp_FIR_filter_fu_157_FIR_delays_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_FIR_filter_fu_157_FIR_delays_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_FIR_filter_fu_157_FIR_delays_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_FIR_filter_fu_157_FIR_delays_ce1 : STD_LOGIC;
    signal grp_FIR_filter_fu_157_FIR_delays_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_FIR_filter_fu_157_x_n : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_FIR_filter_fu_157_shift : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_FIR_filter_fu_157_ap_return : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_FIR_HLS_Pipeline_VITIS_LOOP_65_1_fu_172_ap_start : STD_LOGIC;
    signal grp_FIR_HLS_Pipeline_VITIS_LOOP_65_1_fu_172_ap_done : STD_LOGIC;
    signal grp_FIR_HLS_Pipeline_VITIS_LOOP_65_1_fu_172_ap_idle : STD_LOGIC;
    signal grp_FIR_HLS_Pipeline_VITIS_LOOP_65_1_fu_172_ap_ready : STD_LOGIC;
    signal grp_FIR_HLS_Pipeline_VITIS_LOOP_65_1_fu_172_FIR_accu32_out : STD_LOGIC_VECTOR (30 downto 0);
    signal grp_FIR_HLS_Pipeline_VITIS_LOOP_65_1_fu_172_FIR_accu32_out_ap_vld : STD_LOGIC;
    signal grp_FIR_HLS_Pipeline_VITIS_LOOP_65_1_fu_172_H_filter_FIR_kernel_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_FIR_HLS_Pipeline_VITIS_LOOP_65_1_fu_172_H_filter_FIR_kernel_ce0 : STD_LOGIC;
    signal grp_FIR_HLS_Pipeline_VITIS_LOOP_69_2_fu_181_ap_start : STD_LOGIC;
    signal grp_FIR_HLS_Pipeline_VITIS_LOOP_69_2_fu_181_ap_done : STD_LOGIC;
    signal grp_FIR_HLS_Pipeline_VITIS_LOOP_69_2_fu_181_ap_idle : STD_LOGIC;
    signal grp_FIR_HLS_Pipeline_VITIS_LOOP_69_2_fu_181_ap_ready : STD_LOGIC;
    signal grp_FIR_HLS_Pipeline_VITIS_LOOP_69_2_fu_181_H_filter_FIR_kernel_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_FIR_HLS_Pipeline_VITIS_LOOP_69_2_fu_181_H_filter_FIR_kernel_ce0 : STD_LOGIC;
    signal grp_FIR_HLS_Pipeline_VITIS_LOOP_69_2_fu_181_H_filter_FIR_kernel_we0 : STD_LOGIC;
    signal grp_FIR_HLS_Pipeline_VITIS_LOOP_69_2_fu_181_H_filter_FIR_kernel_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_FIR_HLS_Pipeline_VITIS_LOOP_69_2_fu_181_H_filter_FIR_kernel_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_FIR_HLS_Pipeline_VITIS_LOOP_69_2_fu_181_H_filter_FIR_kernel_ce1 : STD_LOGIC;
    signal ap_phi_mux_p_0_phi_fu_125_p8 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_0_reg_121 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_state5_on_subcall_done : BOOLEAN;
    signal ap_block_state10_on_subcall_done : BOOLEAN;
    signal grp_FIR_filter_2_fu_137_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal grp_FIR_filter_fu_157_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal grp_FIR_HLS_Pipeline_VITIS_LOOP_65_1_fu_172_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal FIR_accu32_loc_fu_98 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal grp_FIR_HLS_Pipeline_VITIS_LOOP_69_2_fu_181_ap_start_reg : STD_LOGIC := '0';
    signal H_filter_FIR_kernel_we0_out : STD_LOGIC;
    signal ap_block_state2_on_subcall_done : BOOLEAN;
    signal H_filter_FIR_kernel_we0_local : STD_LOGIC;
    signal x_n_fu_262_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal H_filter_FIR_kernel_ce0_local : STD_LOGIC;
    signal add_ln25_1_fu_256_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln25_fu_250_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal regslice_both_output_r_U_apdone_blk : STD_LOGIC;
    signal ap_block_state11 : BOOLEAN;
    signal regslice_both_input_r_U_apdone_blk : STD_LOGIC;
    signal input_r_TDATA_int_regslice : STD_LOGIC_VECTOR (15 downto 0);
    signal input_r_TVALID_int_regslice : STD_LOGIC;
    signal input_r_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_input_r_U_ack_in : STD_LOGIC;
    signal output_r_TVALID_int_regslice : STD_LOGIC;
    signal output_r_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_output_r_U_vld_out : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component FIR_HLS_FIR_filter_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        FIR_delays_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        FIR_delays_ce0 : OUT STD_LOGIC;
        FIR_delays_we0 : OUT STD_LOGIC;
        FIR_delays_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        FIR_delays_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        FIR_delays_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        FIR_delays_ce1 : OUT STD_LOGIC;
        FIR_delays_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        FIR_coe_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        FIR_coe_ce0 : OUT STD_LOGIC;
        FIR_coe_q0 : IN STD_LOGIC_VECTOR (14 downto 0);
        x_n : IN STD_LOGIC_VECTOR (15 downto 0);
        shift : IN STD_LOGIC_VECTOR (2 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component FIR_HLS_FIR_filter IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        FIR_delays_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        FIR_delays_ce0 : OUT STD_LOGIC;
        FIR_delays_we0 : OUT STD_LOGIC;
        FIR_delays_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        FIR_delays_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        FIR_delays_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        FIR_delays_ce1 : OUT STD_LOGIC;
        FIR_delays_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        x_n : IN STD_LOGIC_VECTOR (15 downto 0);
        shift : IN STD_LOGIC_VECTOR (2 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component FIR_HLS_FIR_HLS_Pipeline_VITIS_LOOP_65_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        FIR_accu32_out : OUT STD_LOGIC_VECTOR (30 downto 0);
        FIR_accu32_out_ap_vld : OUT STD_LOGIC;
        H_filter_FIR_kernel_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        H_filter_FIR_kernel_ce0 : OUT STD_LOGIC;
        H_filter_FIR_kernel_q0 : IN STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component FIR_HLS_FIR_HLS_Pipeline_VITIS_LOOP_69_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        H_filter_FIR_kernel_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        H_filter_FIR_kernel_ce0 : OUT STD_LOGIC;
        H_filter_FIR_kernel_we0 : OUT STD_LOGIC;
        H_filter_FIR_kernel_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        H_filter_FIR_kernel_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        H_filter_FIR_kernel_ce1 : OUT STD_LOGIC;
        H_filter_FIR_kernel_q1 : IN STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component FIR_HLS_H_filter_FIR_dec_40_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (15 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        address1 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component FIR_HLS_H_filter_FIR_kernel_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (15 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        address1 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component FIR_HLS_H_filter_FIR_dec_43_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (15 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        address1 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component FIR_HLS_b_FIR_dec_int_43_ROM_AUTO_1R IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (14 downto 0) );
    end component;


    component FIR_HLS_b_FIR_dec_int_41_ROM_AUTO_1R IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (14 downto 0) );
    end component;


    component FIR_HLS_b_FIR_dec_int_42_ROM_AUTO_1R IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (14 downto 0) );
    end component;


    component FIR_HLS_regslice_both IS
    generic (
        DataWidth : INTEGER );
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_in : IN STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_in : IN STD_LOGIC;
        ack_in : OUT STD_LOGIC;
        data_out : OUT STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_out : OUT STD_LOGIC;
        ack_out : IN STD_LOGIC;
        apdone_blk : OUT STD_LOGIC );
    end component;



begin
    H_filter_FIR_dec_40_U : component FIR_HLS_H_filter_FIR_dec_40_RAM_AUTO_1R1W
    generic map (
        DataWidth => 16,
        AddressRange => 6,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_FIR_filter_fu_157_FIR_delays_address0,
        ce0 => H_filter_FIR_dec_40_ce0,
        we0 => H_filter_FIR_dec_40_we0,
        d0 => grp_FIR_filter_fu_157_FIR_delays_d0,
        q0 => H_filter_FIR_dec_40_q0,
        address1 => grp_FIR_filter_fu_157_FIR_delays_address1,
        ce1 => H_filter_FIR_dec_40_ce1,
        q1 => H_filter_FIR_dec_40_q1);

    H_filter_FIR_kernel_U : component FIR_HLS_H_filter_FIR_kernel_RAM_AUTO_1R1W
    generic map (
        DataWidth => 16,
        AddressRange => 117,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => H_filter_FIR_kernel_address0,
        ce0 => H_filter_FIR_kernel_ce0,
        we0 => H_filter_FIR_kernel_we0,
        d0 => H_filter_FIR_kernel_d0,
        q0 => H_filter_FIR_kernel_q0,
        address1 => grp_FIR_HLS_Pipeline_VITIS_LOOP_69_2_fu_181_H_filter_FIR_kernel_address1,
        ce1 => H_filter_FIR_kernel_ce1,
        q1 => H_filter_FIR_kernel_q1);

    H_filter_FIR_int_40_U : component FIR_HLS_H_filter_FIR_dec_40_RAM_AUTO_1R1W
    generic map (
        DataWidth => 16,
        AddressRange => 6,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_FIR_filter_fu_157_FIR_delays_address0,
        ce0 => H_filter_FIR_int_40_ce0,
        we0 => H_filter_FIR_int_40_we0,
        d0 => grp_FIR_filter_fu_157_FIR_delays_d0,
        q0 => H_filter_FIR_int_40_q0,
        address1 => grp_FIR_filter_fu_157_FIR_delays_address1,
        ce1 => H_filter_FIR_int_40_ce1,
        q1 => H_filter_FIR_int_40_q1);

    H_filter_FIR_dec_43_U : component FIR_HLS_H_filter_FIR_dec_43_RAM_AUTO_1R1W
    generic map (
        DataWidth => 16,
        AddressRange => 5,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_FIR_filter_2_fu_137_FIR_delays_address0,
        ce0 => H_filter_FIR_dec_43_ce0,
        we0 => H_filter_FIR_dec_43_we0,
        d0 => grp_FIR_filter_2_fu_137_FIR_delays_d0,
        q0 => H_filter_FIR_dec_43_q0,
        address1 => grp_FIR_filter_2_fu_137_FIR_delays_address1,
        ce1 => H_filter_FIR_dec_43_ce1,
        q1 => H_filter_FIR_dec_43_q1);

    b_FIR_dec_int_43_U : component FIR_HLS_b_FIR_dec_int_43_ROM_AUTO_1R
    generic map (
        DataWidth => 15,
        AddressRange => 5,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_FIR_filter_2_fu_137_FIR_coe_address0,
        ce0 => b_FIR_dec_int_43_ce0,
        q0 => b_FIR_dec_int_43_q0);

    H_filter_FIR_int_41_U : component FIR_HLS_H_filter_FIR_dec_43_RAM_AUTO_1R1W
    generic map (
        DataWidth => 16,
        AddressRange => 5,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_FIR_filter_2_fu_137_FIR_delays_address0,
        ce0 => H_filter_FIR_int_41_ce0,
        we0 => H_filter_FIR_int_41_we0,
        d0 => grp_FIR_filter_2_fu_137_FIR_delays_d0,
        q0 => H_filter_FIR_int_41_q0,
        address1 => grp_FIR_filter_2_fu_137_FIR_delays_address1,
        ce1 => H_filter_FIR_int_41_ce1,
        q1 => H_filter_FIR_int_41_q1);

    b_FIR_dec_int_41_U : component FIR_HLS_b_FIR_dec_int_41_ROM_AUTO_1R
    generic map (
        DataWidth => 15,
        AddressRange => 5,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_FIR_filter_2_fu_137_FIR_coe_address0,
        ce0 => b_FIR_dec_int_41_ce0,
        q0 => b_FIR_dec_int_41_q0);

    H_filter_FIR_dec_42_U : component FIR_HLS_H_filter_FIR_dec_43_RAM_AUTO_1R1W
    generic map (
        DataWidth => 16,
        AddressRange => 5,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_FIR_filter_2_fu_137_FIR_delays_address0,
        ce0 => H_filter_FIR_dec_42_ce0,
        we0 => H_filter_FIR_dec_42_we0,
        d0 => grp_FIR_filter_2_fu_137_FIR_delays_d0,
        q0 => H_filter_FIR_dec_42_q0,
        address1 => grp_FIR_filter_2_fu_137_FIR_delays_address1,
        ce1 => H_filter_FIR_dec_42_ce1,
        q1 => H_filter_FIR_dec_42_q1);

    b_FIR_dec_int_42_U : component FIR_HLS_b_FIR_dec_int_42_ROM_AUTO_1R
    generic map (
        DataWidth => 15,
        AddressRange => 5,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_FIR_filter_2_fu_137_FIR_coe_address0,
        ce0 => b_FIR_dec_int_42_ce0,
        q0 => b_FIR_dec_int_42_q0);

    H_filter_FIR_int_42_U : component FIR_HLS_H_filter_FIR_dec_43_RAM_AUTO_1R1W
    generic map (
        DataWidth => 16,
        AddressRange => 5,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_FIR_filter_2_fu_137_FIR_delays_address0,
        ce0 => H_filter_FIR_int_42_ce0,
        we0 => H_filter_FIR_int_42_we0,
        d0 => grp_FIR_filter_2_fu_137_FIR_delays_d0,
        q0 => H_filter_FIR_int_42_q0,
        address1 => grp_FIR_filter_2_fu_137_FIR_delays_address1,
        ce1 => H_filter_FIR_int_42_ce1,
        q1 => H_filter_FIR_int_42_q1);

    H_filter_FIR_dec_41_U : component FIR_HLS_H_filter_FIR_dec_43_RAM_AUTO_1R1W
    generic map (
        DataWidth => 16,
        AddressRange => 5,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_FIR_filter_2_fu_137_FIR_delays_address0,
        ce0 => H_filter_FIR_dec_41_ce0,
        we0 => H_filter_FIR_dec_41_we0,
        d0 => grp_FIR_filter_2_fu_137_FIR_delays_d0,
        q0 => H_filter_FIR_dec_41_q0,
        address1 => grp_FIR_filter_2_fu_137_FIR_delays_address1,
        ce1 => H_filter_FIR_dec_41_ce1,
        q1 => H_filter_FIR_dec_41_q1);

    H_filter_FIR_int_43_U : component FIR_HLS_H_filter_FIR_dec_43_RAM_AUTO_1R1W
    generic map (
        DataWidth => 16,
        AddressRange => 5,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_FIR_filter_2_fu_137_FIR_delays_address0,
        ce0 => H_filter_FIR_int_43_ce0,
        we0 => H_filter_FIR_int_43_we0,
        d0 => grp_FIR_filter_2_fu_137_FIR_delays_d0,
        q0 => H_filter_FIR_int_43_q0,
        address1 => grp_FIR_filter_2_fu_137_FIR_delays_address1,
        ce1 => H_filter_FIR_int_43_ce1,
        q1 => H_filter_FIR_int_43_q1);

    grp_FIR_filter_2_fu_137 : component FIR_HLS_FIR_filter_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_FIR_filter_2_fu_137_ap_start,
        ap_done => grp_FIR_filter_2_fu_137_ap_done,
        ap_idle => grp_FIR_filter_2_fu_137_ap_idle,
        ap_ready => grp_FIR_filter_2_fu_137_ap_ready,
        FIR_delays_address0 => grp_FIR_filter_2_fu_137_FIR_delays_address0,
        FIR_delays_ce0 => grp_FIR_filter_2_fu_137_FIR_delays_ce0,
        FIR_delays_we0 => grp_FIR_filter_2_fu_137_FIR_delays_we0,
        FIR_delays_d0 => grp_FIR_filter_2_fu_137_FIR_delays_d0,
        FIR_delays_q0 => grp_FIR_filter_2_fu_137_FIR_delays_q0,
        FIR_delays_address1 => grp_FIR_filter_2_fu_137_FIR_delays_address1,
        FIR_delays_ce1 => grp_FIR_filter_2_fu_137_FIR_delays_ce1,
        FIR_delays_q1 => grp_FIR_filter_2_fu_137_FIR_delays_q1,
        FIR_coe_address0 => grp_FIR_filter_2_fu_137_FIR_coe_address0,
        FIR_coe_ce0 => grp_FIR_filter_2_fu_137_FIR_coe_ce0,
        FIR_coe_q0 => grp_FIR_filter_2_fu_137_FIR_coe_q0,
        x_n => grp_FIR_filter_2_fu_137_x_n,
        shift => grp_FIR_filter_2_fu_137_shift,
        ap_return => grp_FIR_filter_2_fu_137_ap_return);

    grp_FIR_filter_fu_157 : component FIR_HLS_FIR_filter
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_FIR_filter_fu_157_ap_start,
        ap_done => grp_FIR_filter_fu_157_ap_done,
        ap_idle => grp_FIR_filter_fu_157_ap_idle,
        ap_ready => grp_FIR_filter_fu_157_ap_ready,
        FIR_delays_address0 => grp_FIR_filter_fu_157_FIR_delays_address0,
        FIR_delays_ce0 => grp_FIR_filter_fu_157_FIR_delays_ce0,
        FIR_delays_we0 => grp_FIR_filter_fu_157_FIR_delays_we0,
        FIR_delays_d0 => grp_FIR_filter_fu_157_FIR_delays_d0,
        FIR_delays_q0 => grp_FIR_filter_fu_157_FIR_delays_q0,
        FIR_delays_address1 => grp_FIR_filter_fu_157_FIR_delays_address1,
        FIR_delays_ce1 => grp_FIR_filter_fu_157_FIR_delays_ce1,
        FIR_delays_q1 => grp_FIR_filter_fu_157_FIR_delays_q1,
        x_n => grp_FIR_filter_fu_157_x_n,
        shift => grp_FIR_filter_fu_157_shift,
        ap_return => grp_FIR_filter_fu_157_ap_return);

    grp_FIR_HLS_Pipeline_VITIS_LOOP_65_1_fu_172 : component FIR_HLS_FIR_HLS_Pipeline_VITIS_LOOP_65_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_FIR_HLS_Pipeline_VITIS_LOOP_65_1_fu_172_ap_start,
        ap_done => grp_FIR_HLS_Pipeline_VITIS_LOOP_65_1_fu_172_ap_done,
        ap_idle => grp_FIR_HLS_Pipeline_VITIS_LOOP_65_1_fu_172_ap_idle,
        ap_ready => grp_FIR_HLS_Pipeline_VITIS_LOOP_65_1_fu_172_ap_ready,
        FIR_accu32_out => grp_FIR_HLS_Pipeline_VITIS_LOOP_65_1_fu_172_FIR_accu32_out,
        FIR_accu32_out_ap_vld => grp_FIR_HLS_Pipeline_VITIS_LOOP_65_1_fu_172_FIR_accu32_out_ap_vld,
        H_filter_FIR_kernel_address0 => grp_FIR_HLS_Pipeline_VITIS_LOOP_65_1_fu_172_H_filter_FIR_kernel_address0,
        H_filter_FIR_kernel_ce0 => grp_FIR_HLS_Pipeline_VITIS_LOOP_65_1_fu_172_H_filter_FIR_kernel_ce0,
        H_filter_FIR_kernel_q0 => H_filter_FIR_kernel_q0);

    grp_FIR_HLS_Pipeline_VITIS_LOOP_69_2_fu_181 : component FIR_HLS_FIR_HLS_Pipeline_VITIS_LOOP_69_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_FIR_HLS_Pipeline_VITIS_LOOP_69_2_fu_181_ap_start,
        ap_done => grp_FIR_HLS_Pipeline_VITIS_LOOP_69_2_fu_181_ap_done,
        ap_idle => grp_FIR_HLS_Pipeline_VITIS_LOOP_69_2_fu_181_ap_idle,
        ap_ready => grp_FIR_HLS_Pipeline_VITIS_LOOP_69_2_fu_181_ap_ready,
        H_filter_FIR_kernel_address0 => grp_FIR_HLS_Pipeline_VITIS_LOOP_69_2_fu_181_H_filter_FIR_kernel_address0,
        H_filter_FIR_kernel_ce0 => grp_FIR_HLS_Pipeline_VITIS_LOOP_69_2_fu_181_H_filter_FIR_kernel_ce0,
        H_filter_FIR_kernel_we0 => grp_FIR_HLS_Pipeline_VITIS_LOOP_69_2_fu_181_H_filter_FIR_kernel_we0,
        H_filter_FIR_kernel_d0 => grp_FIR_HLS_Pipeline_VITIS_LOOP_69_2_fu_181_H_filter_FIR_kernel_d0,
        H_filter_FIR_kernel_address1 => grp_FIR_HLS_Pipeline_VITIS_LOOP_69_2_fu_181_H_filter_FIR_kernel_address1,
        H_filter_FIR_kernel_ce1 => grp_FIR_HLS_Pipeline_VITIS_LOOP_69_2_fu_181_H_filter_FIR_kernel_ce1,
        H_filter_FIR_kernel_q1 => H_filter_FIR_kernel_q1);

    regslice_both_input_r_U : component FIR_HLS_regslice_both
    generic map (
        DataWidth => 16)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => input_r_TDATA,
        vld_in => input_r_TVALID,
        ack_in => regslice_both_input_r_U_ack_in,
        data_out => input_r_TDATA_int_regslice,
        vld_out => input_r_TVALID_int_regslice,
        ack_out => input_r_TREADY_int_regslice,
        apdone_blk => regslice_both_input_r_U_apdone_blk);

    regslice_both_output_r_U : component FIR_HLS_regslice_both
    generic map (
        DataWidth => 16)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => ap_phi_mux_p_0_phi_fu_125_p8,
        vld_in => output_r_TVALID_int_regslice,
        ack_in => output_r_TREADY_int_regslice,
        data_out => output_r_TDATA,
        vld_out => regslice_both_output_r_U_vld_out,
        ack_out => output_r_TREADY,
        apdone_blk => regslice_both_output_r_U_apdone_blk);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_FIR_HLS_Pipeline_VITIS_LOOP_65_1_fu_172_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_FIR_HLS_Pipeline_VITIS_LOOP_65_1_fu_172_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                    grp_FIR_HLS_Pipeline_VITIS_LOOP_65_1_fu_172_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_FIR_HLS_Pipeline_VITIS_LOOP_65_1_fu_172_ap_ready = ap_const_logic_1)) then 
                    grp_FIR_HLS_Pipeline_VITIS_LOOP_65_1_fu_172_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_FIR_HLS_Pipeline_VITIS_LOOP_69_2_fu_181_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_FIR_HLS_Pipeline_VITIS_LOOP_69_2_fu_181_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                    grp_FIR_HLS_Pipeline_VITIS_LOOP_69_2_fu_181_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_FIR_HLS_Pipeline_VITIS_LOOP_69_2_fu_181_ap_ready = ap_const_logic_1)) then 
                    grp_FIR_HLS_Pipeline_VITIS_LOOP_69_2_fu_181_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_FIR_filter_2_fu_137_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_FIR_filter_2_fu_137_ap_start_reg <= ap_const_logic_0;
            else
                if ((((input_r_TVALID_int_regslice = ap_const_logic_1) and (mod_value_load_load_fu_194_p1 = ap_const_lv2_3) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((input_r_TVALID_int_regslice = ap_const_logic_1) and (mod_value_load_load_fu_194_p1 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((input_r_TVALID_int_regslice = ap_const_logic_1) and (mod_value_load_load_fu_194_p1 = ap_const_lv2_2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_logic_1 = ap_CS_fsm_state4) and (mod_value_load_reg_307 = ap_const_lv2_3)) or ((ap_const_logic_1 = ap_CS_fsm_state4) and (mod_value_load_reg_307 = ap_const_lv2_1)) or ((ap_const_logic_1 = ap_CS_fsm_state4) and (mod_value_load_reg_307 = ap_const_lv2_2)))) then 
                    grp_FIR_filter_2_fu_137_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_FIR_filter_2_fu_137_ap_ready = ap_const_logic_1)) then 
                    grp_FIR_filter_2_fu_137_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_FIR_filter_fu_157_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_FIR_filter_fu_157_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state9) or ((input_r_TVALID_int_regslice = ap_const_logic_1) and (mod_value_load_load_fu_194_p1 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                    grp_FIR_filter_fu_157_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_FIR_filter_fu_157_ap_ready = ap_const_logic_1)) then 
                    grp_FIR_filter_fu_157_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    mod_value_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state5_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state5) and (mod_value_load_reg_307 = ap_const_lv2_3))) then 
                mod_value <= ap_const_lv2_0;
            elsif (((ap_const_boolean_0 = ap_block_state5_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state5) and (mod_value_load_reg_307 = ap_const_lv2_1))) then 
                mod_value <= ap_const_lv2_2;
            elsif (((ap_const_boolean_0 = ap_block_state5_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state5) and (mod_value_load_reg_307 = ap_const_lv2_2))) then 
                mod_value <= ap_const_lv2_3;
            elsif ((not(((output_r_TREADY_int_regslice = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state10_on_subcall_done))) and (ap_const_logic_1 = ap_CS_fsm_state10) and (mod_value_load_reg_307 = ap_const_lv2_0))) then 
                mod_value <= ap_const_lv2_1;
            end if; 
        end if;
    end process;

    p_0_reg_121_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((output_r_TREADY_int_regslice = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state10_on_subcall_done))) and (ap_const_logic_1 = ap_CS_fsm_state10) and (mod_value_load_reg_307 = ap_const_lv2_0))) then 
                p_0_reg_121 <= grp_FIR_filter_fu_157_ap_return;
            elsif ((((ap_const_boolean_0 = ap_block_state5_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state5) and (mod_value_load_reg_307 = ap_const_lv2_3)) or ((ap_const_boolean_0 = ap_block_state5_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state5) and (mod_value_load_reg_307 = ap_const_lv2_1)) or ((ap_const_boolean_0 = ap_block_state5_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state5) and (mod_value_load_reg_307 = ap_const_lv2_2)))) then 
                p_0_reg_121 <= grp_FIR_filter_2_fu_137_ap_return;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_FIR_HLS_Pipeline_VITIS_LOOP_65_1_fu_172_FIR_accu32_out_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                FIR_accu32_loc_fu_98 <= grp_FIR_HLS_Pipeline_VITIS_LOOP_65_1_fu_172_FIR_accu32_out;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                data_in_reg_301 <= input_r_TDATA_int_regslice;
                mod_value_load_reg_307 <= mod_value;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2) and (mod_value_load_reg_307 = ap_const_lv2_1))) then
                y1_phase1 <= grp_FIR_filter_2_fu_137_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2) and (mod_value_load_reg_307 = ap_const_lv2_2))) then
                y1_phase2 <= grp_FIR_filter_2_fu_137_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2) and (mod_value_load_reg_307 = ap_const_lv2_3))) then
                y1_phase3 <= grp_FIR_filter_2_fu_137_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then
                y2 <= FIR_accu32_loc_fu_98(30 downto 15);
                y_reg_314 <= FIR_accu32_loc_fu_98(30 downto 15);
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state5, mod_value_load_reg_307, mod_value_load_load_fu_194_p1, grp_FIR_filter_fu_157_ap_done, grp_FIR_HLS_Pipeline_VITIS_LOOP_65_1_fu_172_ap_done, ap_block_state5_on_subcall_done, ap_block_state10_on_subcall_done, ap_CS_fsm_state2, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_block_state2_on_subcall_done, ap_block_state11, input_r_TVALID_int_regslice, output_r_TREADY_int_regslice)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((input_r_TVALID_int_regslice = ap_const_logic_1) and (mod_value_load_load_fu_194_p1 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                elsif (((input_r_TVALID_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and ((mod_value_load_load_fu_194_p1 = ap_const_lv2_3) or ((mod_value_load_load_fu_194_p1 = ap_const_lv2_1) or (mod_value_load_load_fu_194_p1 = ap_const_lv2_2))))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2) and ((mod_value_load_reg_307 = ap_const_lv2_3) or ((mod_value_load_reg_307 = ap_const_lv2_1) or (mod_value_load_reg_307 = ap_const_lv2_2))))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                if (((ap_const_boolean_0 = ap_block_state5_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state5) and ((mod_value_load_reg_307 = ap_const_lv2_3) or ((mod_value_load_reg_307 = ap_const_lv2_1) or (mod_value_load_reg_307 = ap_const_lv2_2))))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state6 => 
                if (((grp_FIR_filter_fu_157_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                if (((grp_FIR_HLS_Pipeline_VITIS_LOOP_65_1_fu_172_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                if ((not(((output_r_TREADY_int_regslice = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state10_on_subcall_done))) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when ap_ST_fsm_state11 => 
                if (((ap_const_boolean_0 = ap_block_state11) and (ap_const_logic_1 = ap_CS_fsm_state11))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state11;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXX";
        end case;
    end process;

    H_filter_FIR_dec_40_ce0_assign_proc : process(grp_FIR_filter_fu_157_FIR_delays_ce0, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            H_filter_FIR_dec_40_ce0 <= grp_FIR_filter_fu_157_FIR_delays_ce0;
        else 
            H_filter_FIR_dec_40_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    H_filter_FIR_dec_40_ce1_assign_proc : process(grp_FIR_filter_fu_157_FIR_delays_ce1, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            H_filter_FIR_dec_40_ce1 <= grp_FIR_filter_fu_157_FIR_delays_ce1;
        else 
            H_filter_FIR_dec_40_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    H_filter_FIR_dec_40_we0_assign_proc : process(grp_FIR_filter_fu_157_FIR_delays_we0, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            H_filter_FIR_dec_40_we0 <= grp_FIR_filter_fu_157_FIR_delays_we0;
        else 
            H_filter_FIR_dec_40_we0 <= ap_const_logic_0;
        end if; 
    end process;


    H_filter_FIR_dec_41_ce0_assign_proc : process(mod_value_load_reg_307, grp_FIR_filter_2_fu_137_FIR_delays_ce0, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (mod_value_load_reg_307 = ap_const_lv2_3))) then 
            H_filter_FIR_dec_41_ce0 <= grp_FIR_filter_2_fu_137_FIR_delays_ce0;
        else 
            H_filter_FIR_dec_41_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    H_filter_FIR_dec_41_ce1_assign_proc : process(mod_value_load_reg_307, grp_FIR_filter_2_fu_137_FIR_delays_ce1, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (mod_value_load_reg_307 = ap_const_lv2_3))) then 
            H_filter_FIR_dec_41_ce1 <= grp_FIR_filter_2_fu_137_FIR_delays_ce1;
        else 
            H_filter_FIR_dec_41_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    H_filter_FIR_dec_41_we0_assign_proc : process(mod_value_load_reg_307, grp_FIR_filter_2_fu_137_FIR_delays_we0, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (mod_value_load_reg_307 = ap_const_lv2_3))) then 
            H_filter_FIR_dec_41_we0 <= grp_FIR_filter_2_fu_137_FIR_delays_we0;
        else 
            H_filter_FIR_dec_41_we0 <= ap_const_logic_0;
        end if; 
    end process;


    H_filter_FIR_dec_42_ce0_assign_proc : process(mod_value_load_reg_307, grp_FIR_filter_2_fu_137_FIR_delays_ce0, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (mod_value_load_reg_307 = ap_const_lv2_2))) then 
            H_filter_FIR_dec_42_ce0 <= grp_FIR_filter_2_fu_137_FIR_delays_ce0;
        else 
            H_filter_FIR_dec_42_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    H_filter_FIR_dec_42_ce1_assign_proc : process(mod_value_load_reg_307, grp_FIR_filter_2_fu_137_FIR_delays_ce1, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (mod_value_load_reg_307 = ap_const_lv2_2))) then 
            H_filter_FIR_dec_42_ce1 <= grp_FIR_filter_2_fu_137_FIR_delays_ce1;
        else 
            H_filter_FIR_dec_42_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    H_filter_FIR_dec_42_we0_assign_proc : process(mod_value_load_reg_307, grp_FIR_filter_2_fu_137_FIR_delays_we0, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (mod_value_load_reg_307 = ap_const_lv2_2))) then 
            H_filter_FIR_dec_42_we0 <= grp_FIR_filter_2_fu_137_FIR_delays_we0;
        else 
            H_filter_FIR_dec_42_we0 <= ap_const_logic_0;
        end if; 
    end process;


    H_filter_FIR_dec_43_ce0_assign_proc : process(mod_value_load_reg_307, grp_FIR_filter_2_fu_137_FIR_delays_ce0, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (mod_value_load_reg_307 = ap_const_lv2_1))) then 
            H_filter_FIR_dec_43_ce0 <= grp_FIR_filter_2_fu_137_FIR_delays_ce0;
        else 
            H_filter_FIR_dec_43_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    H_filter_FIR_dec_43_ce1_assign_proc : process(mod_value_load_reg_307, grp_FIR_filter_2_fu_137_FIR_delays_ce1, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (mod_value_load_reg_307 = ap_const_lv2_1))) then 
            H_filter_FIR_dec_43_ce1 <= grp_FIR_filter_2_fu_137_FIR_delays_ce1;
        else 
            H_filter_FIR_dec_43_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    H_filter_FIR_dec_43_we0_assign_proc : process(mod_value_load_reg_307, grp_FIR_filter_2_fu_137_FIR_delays_we0, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (mod_value_load_reg_307 = ap_const_lv2_1))) then 
            H_filter_FIR_dec_43_we0 <= grp_FIR_filter_2_fu_137_FIR_delays_we0;
        else 
            H_filter_FIR_dec_43_we0 <= ap_const_logic_0;
        end if; 
    end process;


    H_filter_FIR_int_40_ce0_assign_proc : process(ap_CS_fsm_state10, mod_value_load_reg_307, grp_FIR_filter_fu_157_FIR_delays_ce0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) and (mod_value_load_reg_307 = ap_const_lv2_0))) then 
            H_filter_FIR_int_40_ce0 <= grp_FIR_filter_fu_157_FIR_delays_ce0;
        else 
            H_filter_FIR_int_40_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    H_filter_FIR_int_40_ce1_assign_proc : process(ap_CS_fsm_state10, mod_value_load_reg_307, grp_FIR_filter_fu_157_FIR_delays_ce1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) and (mod_value_load_reg_307 = ap_const_lv2_0))) then 
            H_filter_FIR_int_40_ce1 <= grp_FIR_filter_fu_157_FIR_delays_ce1;
        else 
            H_filter_FIR_int_40_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    H_filter_FIR_int_40_we0_assign_proc : process(ap_CS_fsm_state10, mod_value_load_reg_307, grp_FIR_filter_fu_157_FIR_delays_we0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) and (mod_value_load_reg_307 = ap_const_lv2_0))) then 
            H_filter_FIR_int_40_we0 <= grp_FIR_filter_fu_157_FIR_delays_we0;
        else 
            H_filter_FIR_int_40_we0 <= ap_const_logic_0;
        end if; 
    end process;


    H_filter_FIR_int_41_ce0_assign_proc : process(ap_CS_fsm_state5, mod_value_load_reg_307, grp_FIR_filter_2_fu_137_FIR_delays_ce0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) and (mod_value_load_reg_307 = ap_const_lv2_1))) then 
            H_filter_FIR_int_41_ce0 <= grp_FIR_filter_2_fu_137_FIR_delays_ce0;
        else 
            H_filter_FIR_int_41_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    H_filter_FIR_int_41_ce1_assign_proc : process(ap_CS_fsm_state5, mod_value_load_reg_307, grp_FIR_filter_2_fu_137_FIR_delays_ce1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) and (mod_value_load_reg_307 = ap_const_lv2_1))) then 
            H_filter_FIR_int_41_ce1 <= grp_FIR_filter_2_fu_137_FIR_delays_ce1;
        else 
            H_filter_FIR_int_41_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    H_filter_FIR_int_41_we0_assign_proc : process(ap_CS_fsm_state5, mod_value_load_reg_307, grp_FIR_filter_2_fu_137_FIR_delays_we0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) and (mod_value_load_reg_307 = ap_const_lv2_1))) then 
            H_filter_FIR_int_41_we0 <= grp_FIR_filter_2_fu_137_FIR_delays_we0;
        else 
            H_filter_FIR_int_41_we0 <= ap_const_logic_0;
        end if; 
    end process;


    H_filter_FIR_int_42_ce0_assign_proc : process(ap_CS_fsm_state5, mod_value_load_reg_307, grp_FIR_filter_2_fu_137_FIR_delays_ce0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) and (mod_value_load_reg_307 = ap_const_lv2_2))) then 
            H_filter_FIR_int_42_ce0 <= grp_FIR_filter_2_fu_137_FIR_delays_ce0;
        else 
            H_filter_FIR_int_42_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    H_filter_FIR_int_42_ce1_assign_proc : process(ap_CS_fsm_state5, mod_value_load_reg_307, grp_FIR_filter_2_fu_137_FIR_delays_ce1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) and (mod_value_load_reg_307 = ap_const_lv2_2))) then 
            H_filter_FIR_int_42_ce1 <= grp_FIR_filter_2_fu_137_FIR_delays_ce1;
        else 
            H_filter_FIR_int_42_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    H_filter_FIR_int_42_we0_assign_proc : process(ap_CS_fsm_state5, mod_value_load_reg_307, grp_FIR_filter_2_fu_137_FIR_delays_we0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) and (mod_value_load_reg_307 = ap_const_lv2_2))) then 
            H_filter_FIR_int_42_we0 <= grp_FIR_filter_2_fu_137_FIR_delays_we0;
        else 
            H_filter_FIR_int_42_we0 <= ap_const_logic_0;
        end if; 
    end process;


    H_filter_FIR_int_43_ce0_assign_proc : process(ap_CS_fsm_state5, mod_value_load_reg_307, grp_FIR_filter_2_fu_137_FIR_delays_ce0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) and (mod_value_load_reg_307 = ap_const_lv2_3))) then 
            H_filter_FIR_int_43_ce0 <= grp_FIR_filter_2_fu_137_FIR_delays_ce0;
        else 
            H_filter_FIR_int_43_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    H_filter_FIR_int_43_ce1_assign_proc : process(ap_CS_fsm_state5, mod_value_load_reg_307, grp_FIR_filter_2_fu_137_FIR_delays_ce1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) and (mod_value_load_reg_307 = ap_const_lv2_3))) then 
            H_filter_FIR_int_43_ce1 <= grp_FIR_filter_2_fu_137_FIR_delays_ce1;
        else 
            H_filter_FIR_int_43_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    H_filter_FIR_int_43_we0_assign_proc : process(ap_CS_fsm_state5, mod_value_load_reg_307, grp_FIR_filter_2_fu_137_FIR_delays_we0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) and (mod_value_load_reg_307 = ap_const_lv2_3))) then 
            H_filter_FIR_int_43_we0 <= grp_FIR_filter_2_fu_137_FIR_delays_we0;
        else 
            H_filter_FIR_int_43_we0 <= ap_const_logic_0;
        end if; 
    end process;


    H_filter_FIR_kernel_address0_assign_proc : process(ap_CS_fsm_state10, mod_value_load_reg_307, grp_FIR_HLS_Pipeline_VITIS_LOOP_65_1_fu_172_H_filter_FIR_kernel_address0, grp_FIR_HLS_Pipeline_VITIS_LOOP_69_2_fu_181_H_filter_FIR_kernel_address0, ap_CS_fsm_state8)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) and (mod_value_load_reg_307 = ap_const_lv2_0))) then 
            H_filter_FIR_kernel_address0 <= grp_FIR_HLS_Pipeline_VITIS_LOOP_69_2_fu_181_H_filter_FIR_kernel_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            H_filter_FIR_kernel_address0 <= grp_FIR_HLS_Pipeline_VITIS_LOOP_65_1_fu_172_H_filter_FIR_kernel_address0;
        else 
            H_filter_FIR_kernel_address0 <= ap_const_lv7_74;
        end if; 
    end process;


    H_filter_FIR_kernel_ce0_assign_proc : process(ap_CS_fsm_state10, mod_value_load_reg_307, grp_FIR_HLS_Pipeline_VITIS_LOOP_65_1_fu_172_H_filter_FIR_kernel_ce0, grp_FIR_HLS_Pipeline_VITIS_LOOP_69_2_fu_181_H_filter_FIR_kernel_ce0, ap_CS_fsm_state8, H_filter_FIR_kernel_ce0_local)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) and (mod_value_load_reg_307 = ap_const_lv2_0))) then 
            H_filter_FIR_kernel_ce0 <= grp_FIR_HLS_Pipeline_VITIS_LOOP_69_2_fu_181_H_filter_FIR_kernel_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            H_filter_FIR_kernel_ce0 <= grp_FIR_HLS_Pipeline_VITIS_LOOP_65_1_fu_172_H_filter_FIR_kernel_ce0;
        else 
            H_filter_FIR_kernel_ce0 <= H_filter_FIR_kernel_ce0_local;
        end if; 
    end process;


    H_filter_FIR_kernel_ce0_local_assign_proc : process(grp_FIR_filter_fu_157_ap_done, ap_CS_fsm_state6)
    begin
        if (((grp_FIR_filter_fu_157_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            H_filter_FIR_kernel_ce0_local <= ap_const_logic_1;
        else 
            H_filter_FIR_kernel_ce0_local <= ap_const_logic_0;
        end if; 
    end process;


    H_filter_FIR_kernel_ce1_assign_proc : process(ap_CS_fsm_state10, mod_value_load_reg_307, grp_FIR_HLS_Pipeline_VITIS_LOOP_69_2_fu_181_H_filter_FIR_kernel_ce1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) and (mod_value_load_reg_307 = ap_const_lv2_0))) then 
            H_filter_FIR_kernel_ce1 <= grp_FIR_HLS_Pipeline_VITIS_LOOP_69_2_fu_181_H_filter_FIR_kernel_ce1;
        else 
            H_filter_FIR_kernel_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    H_filter_FIR_kernel_d0_assign_proc : process(ap_CS_fsm_state10, mod_value_load_reg_307, grp_FIR_HLS_Pipeline_VITIS_LOOP_69_2_fu_181_H_filter_FIR_kernel_d0, x_n_fu_262_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) and (mod_value_load_reg_307 = ap_const_lv2_0))) then 
            H_filter_FIR_kernel_d0 <= grp_FIR_HLS_Pipeline_VITIS_LOOP_69_2_fu_181_H_filter_FIR_kernel_d0;
        else 
            H_filter_FIR_kernel_d0 <= x_n_fu_262_p2;
        end if; 
    end process;


    H_filter_FIR_kernel_we0_assign_proc : process(ap_CS_fsm_state10, mod_value_load_reg_307, grp_FIR_HLS_Pipeline_VITIS_LOOP_69_2_fu_181_H_filter_FIR_kernel_we0, H_filter_FIR_kernel_we0_out)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) and (mod_value_load_reg_307 = ap_const_lv2_0))) then 
            H_filter_FIR_kernel_we0 <= grp_FIR_HLS_Pipeline_VITIS_LOOP_69_2_fu_181_H_filter_FIR_kernel_we0;
        else 
            H_filter_FIR_kernel_we0 <= (ap_const_logic_0 or H_filter_FIR_kernel_we0_out);
        end if; 
    end process;


    H_filter_FIR_kernel_we0_local_assign_proc : process(grp_FIR_filter_fu_157_ap_done, ap_CS_fsm_state6)
    begin
        if (((grp_FIR_filter_fu_157_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            H_filter_FIR_kernel_we0_local <= ap_const_logic_1;
        else 
            H_filter_FIR_kernel_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    H_filter_FIR_kernel_we0_out <= H_filter_FIR_kernel_we0_local;
    add_ln25_1_fu_256_p2 <= std_logic_vector(unsigned(y1_phase3) + unsigned(grp_FIR_filter_fu_157_ap_return));
    add_ln25_fu_250_p2 <= std_logic_vector(unsigned(y1_phase1) + unsigned(y1_phase2));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_ST_fsm_state10_blk_assign_proc : process(ap_block_state10_on_subcall_done, output_r_TREADY_int_regslice)
    begin
        if (((output_r_TREADY_int_regslice = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state10_on_subcall_done))) then 
            ap_ST_fsm_state10_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state10_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state11_blk_assign_proc : process(ap_block_state11)
    begin
        if ((ap_const_boolean_1 = ap_block_state11)) then 
            ap_ST_fsm_state11_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state11_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state1_blk_assign_proc : process(input_r_TVALID_int_regslice)
    begin
        if ((input_r_TVALID_int_regslice = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state2_blk_assign_proc : process(ap_block_state2_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state2_on_subcall_done)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state3_blk <= ap_const_logic_0;
    ap_ST_fsm_state4_blk <= ap_const_logic_0;

    ap_ST_fsm_state5_blk_assign_proc : process(ap_block_state5_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state5_on_subcall_done)) then 
            ap_ST_fsm_state5_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state5_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state6_blk_assign_proc : process(grp_FIR_filter_fu_157_ap_done)
    begin
        if ((grp_FIR_filter_fu_157_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state6_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state6_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state7_blk <= ap_const_logic_0;

    ap_ST_fsm_state8_blk_assign_proc : process(grp_FIR_HLS_Pipeline_VITIS_LOOP_65_1_fu_172_ap_done)
    begin
        if ((grp_FIR_HLS_Pipeline_VITIS_LOOP_65_1_fu_172_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state8_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state8_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_block_state10_on_subcall_done_assign_proc : process(mod_value_load_reg_307, grp_FIR_filter_fu_157_ap_done, grp_FIR_HLS_Pipeline_VITIS_LOOP_69_2_fu_181_ap_done)
    begin
                ap_block_state10_on_subcall_done <= (((grp_FIR_filter_fu_157_ap_done = ap_const_logic_0) and (mod_value_load_reg_307 = ap_const_lv2_0)) or ((grp_FIR_HLS_Pipeline_VITIS_LOOP_69_2_fu_181_ap_done = ap_const_logic_0) and (mod_value_load_reg_307 = ap_const_lv2_0)));
    end process;


    ap_block_state11_assign_proc : process(regslice_both_output_r_U_apdone_blk, output_r_TREADY_int_regslice)
    begin
                ap_block_state11 <= ((output_r_TREADY_int_regslice = ap_const_logic_0) or (regslice_both_output_r_U_apdone_blk = ap_const_logic_1));
    end process;


    ap_block_state2_on_subcall_done_assign_proc : process(mod_value_load_reg_307, grp_FIR_filter_2_fu_137_ap_done)
    begin
                ap_block_state2_on_subcall_done <= (((grp_FIR_filter_2_fu_137_ap_done = ap_const_logic_0) and (mod_value_load_reg_307 = ap_const_lv2_3)) or ((grp_FIR_filter_2_fu_137_ap_done = ap_const_logic_0) and (mod_value_load_reg_307 = ap_const_lv2_1)) or ((grp_FIR_filter_2_fu_137_ap_done = ap_const_logic_0) and (mod_value_load_reg_307 = ap_const_lv2_2)));
    end process;


    ap_block_state5_on_subcall_done_assign_proc : process(mod_value_load_reg_307, grp_FIR_filter_2_fu_137_ap_done)
    begin
                ap_block_state5_on_subcall_done <= (((grp_FIR_filter_2_fu_137_ap_done = ap_const_logic_0) and (mod_value_load_reg_307 = ap_const_lv2_3)) or ((grp_FIR_filter_2_fu_137_ap_done = ap_const_logic_0) and (mod_value_load_reg_307 = ap_const_lv2_1)) or ((grp_FIR_filter_2_fu_137_ap_done = ap_const_logic_0) and (mod_value_load_reg_307 = ap_const_lv2_2)));
    end process;


    ap_phi_mux_p_0_phi_fu_125_p8_assign_proc : process(ap_CS_fsm_state10, mod_value_load_reg_307, grp_FIR_filter_fu_157_ap_return, p_0_reg_121)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) and (mod_value_load_reg_307 = ap_const_lv2_0))) then 
            ap_phi_mux_p_0_phi_fu_125_p8 <= grp_FIR_filter_fu_157_ap_return;
        else 
            ap_phi_mux_p_0_phi_fu_125_p8 <= p_0_reg_121;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;


    b_FIR_dec_int_41_ce0_assign_proc : process(ap_CS_fsm_state5, mod_value_load_reg_307, grp_FIR_filter_2_fu_137_FIR_coe_ce0, ap_CS_fsm_state2)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state2) and (mod_value_load_reg_307 = ap_const_lv2_3)) or ((ap_const_logic_1 = ap_CS_fsm_state5) and (mod_value_load_reg_307 = ap_const_lv2_1)))) then 
            b_FIR_dec_int_41_ce0 <= grp_FIR_filter_2_fu_137_FIR_coe_ce0;
        else 
            b_FIR_dec_int_41_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    b_FIR_dec_int_42_ce0_assign_proc : process(ap_CS_fsm_state5, mod_value_load_reg_307, grp_FIR_filter_2_fu_137_FIR_coe_ce0, ap_CS_fsm_state2)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state2) and (mod_value_load_reg_307 = ap_const_lv2_2)) or ((ap_const_logic_1 = ap_CS_fsm_state5) and (mod_value_load_reg_307 = ap_const_lv2_2)))) then 
            b_FIR_dec_int_42_ce0 <= grp_FIR_filter_2_fu_137_FIR_coe_ce0;
        else 
            b_FIR_dec_int_42_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    b_FIR_dec_int_43_ce0_assign_proc : process(ap_CS_fsm_state5, mod_value_load_reg_307, grp_FIR_filter_2_fu_137_FIR_coe_ce0, ap_CS_fsm_state2)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state2) and (mod_value_load_reg_307 = ap_const_lv2_1)) or ((ap_const_logic_1 = ap_CS_fsm_state5) and (mod_value_load_reg_307 = ap_const_lv2_3)))) then 
            b_FIR_dec_int_43_ce0 <= grp_FIR_filter_2_fu_137_FIR_coe_ce0;
        else 
            b_FIR_dec_int_43_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    grp_FIR_HLS_Pipeline_VITIS_LOOP_65_1_fu_172_ap_start <= grp_FIR_HLS_Pipeline_VITIS_LOOP_65_1_fu_172_ap_start_reg;
    grp_FIR_HLS_Pipeline_VITIS_LOOP_69_2_fu_181_ap_start <= grp_FIR_HLS_Pipeline_VITIS_LOOP_69_2_fu_181_ap_start_reg;

    grp_FIR_filter_2_fu_137_FIR_coe_q0_assign_proc : process(b_FIR_dec_int_43_q0, b_FIR_dec_int_41_q0, b_FIR_dec_int_42_q0, ap_CS_fsm_state5, mod_value_load_reg_307, ap_CS_fsm_state2)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state2) and (mod_value_load_reg_307 = ap_const_lv2_3)) or ((ap_const_logic_1 = ap_CS_fsm_state5) and (mod_value_load_reg_307 = ap_const_lv2_1)))) then 
            grp_FIR_filter_2_fu_137_FIR_coe_q0 <= b_FIR_dec_int_41_q0;
        elsif ((((ap_const_logic_1 = ap_CS_fsm_state2) and (mod_value_load_reg_307 = ap_const_lv2_1)) or ((ap_const_logic_1 = ap_CS_fsm_state5) and (mod_value_load_reg_307 = ap_const_lv2_3)))) then 
            grp_FIR_filter_2_fu_137_FIR_coe_q0 <= b_FIR_dec_int_43_q0;
        elsif ((((ap_const_logic_1 = ap_CS_fsm_state2) and (mod_value_load_reg_307 = ap_const_lv2_2)) or ((ap_const_logic_1 = ap_CS_fsm_state5) and (mod_value_load_reg_307 = ap_const_lv2_2)))) then 
            grp_FIR_filter_2_fu_137_FIR_coe_q0 <= b_FIR_dec_int_42_q0;
        else 
            grp_FIR_filter_2_fu_137_FIR_coe_q0 <= "XXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_FIR_filter_2_fu_137_FIR_delays_q0_assign_proc : process(H_filter_FIR_dec_43_q0, H_filter_FIR_int_41_q0, H_filter_FIR_dec_42_q0, H_filter_FIR_int_42_q0, H_filter_FIR_dec_41_q0, H_filter_FIR_int_43_q0, ap_CS_fsm_state5, mod_value_load_reg_307, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) and (mod_value_load_reg_307 = ap_const_lv2_3))) then 
            grp_FIR_filter_2_fu_137_FIR_delays_q0 <= H_filter_FIR_int_43_q0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (mod_value_load_reg_307 = ap_const_lv2_1))) then 
            grp_FIR_filter_2_fu_137_FIR_delays_q0 <= H_filter_FIR_int_41_q0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (mod_value_load_reg_307 = ap_const_lv2_2))) then 
            grp_FIR_filter_2_fu_137_FIR_delays_q0 <= H_filter_FIR_int_42_q0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (mod_value_load_reg_307 = ap_const_lv2_3))) then 
            grp_FIR_filter_2_fu_137_FIR_delays_q0 <= H_filter_FIR_dec_41_q0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (mod_value_load_reg_307 = ap_const_lv2_1))) then 
            grp_FIR_filter_2_fu_137_FIR_delays_q0 <= H_filter_FIR_dec_43_q0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (mod_value_load_reg_307 = ap_const_lv2_2))) then 
            grp_FIR_filter_2_fu_137_FIR_delays_q0 <= H_filter_FIR_dec_42_q0;
        else 
            grp_FIR_filter_2_fu_137_FIR_delays_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_FIR_filter_2_fu_137_FIR_delays_q1_assign_proc : process(H_filter_FIR_dec_43_q1, H_filter_FIR_int_41_q1, H_filter_FIR_dec_42_q1, H_filter_FIR_int_42_q1, H_filter_FIR_dec_41_q1, H_filter_FIR_int_43_q1, ap_CS_fsm_state5, mod_value_load_reg_307, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) and (mod_value_load_reg_307 = ap_const_lv2_3))) then 
            grp_FIR_filter_2_fu_137_FIR_delays_q1 <= H_filter_FIR_int_43_q1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (mod_value_load_reg_307 = ap_const_lv2_1))) then 
            grp_FIR_filter_2_fu_137_FIR_delays_q1 <= H_filter_FIR_int_41_q1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (mod_value_load_reg_307 = ap_const_lv2_2))) then 
            grp_FIR_filter_2_fu_137_FIR_delays_q1 <= H_filter_FIR_int_42_q1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (mod_value_load_reg_307 = ap_const_lv2_3))) then 
            grp_FIR_filter_2_fu_137_FIR_delays_q1 <= H_filter_FIR_dec_41_q1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (mod_value_load_reg_307 = ap_const_lv2_1))) then 
            grp_FIR_filter_2_fu_137_FIR_delays_q1 <= H_filter_FIR_dec_43_q1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (mod_value_load_reg_307 = ap_const_lv2_2))) then 
            grp_FIR_filter_2_fu_137_FIR_delays_q1 <= H_filter_FIR_dec_42_q1;
        else 
            grp_FIR_filter_2_fu_137_FIR_delays_q1 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_FIR_filter_2_fu_137_ap_start <= grp_FIR_filter_2_fu_137_ap_start_reg;

    grp_FIR_filter_2_fu_137_shift_assign_proc : process(ap_CS_fsm_state5, mod_value_load_reg_307, ap_CS_fsm_state2)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state5) and (mod_value_load_reg_307 = ap_const_lv2_3)) or ((ap_const_logic_1 = ap_CS_fsm_state5) and (mod_value_load_reg_307 = ap_const_lv2_1)) or ((ap_const_logic_1 = ap_CS_fsm_state5) and (mod_value_load_reg_307 = ap_const_lv2_2)))) then 
            grp_FIR_filter_2_fu_137_shift <= ap_const_lv3_5;
        elsif ((((ap_const_logic_1 = ap_CS_fsm_state2) and (mod_value_load_reg_307 = ap_const_lv2_3)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (mod_value_load_reg_307 = ap_const_lv2_1)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (mod_value_load_reg_307 = ap_const_lv2_2)))) then 
            grp_FIR_filter_2_fu_137_shift <= ap_const_lv3_7;
        else 
            grp_FIR_filter_2_fu_137_shift <= "XXX";
        end if; 
    end process;


    grp_FIR_filter_2_fu_137_x_n_assign_proc : process(y2, ap_CS_fsm_state5, mod_value_load_reg_307, data_in_reg_301, ap_CS_fsm_state2)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state5) and (mod_value_load_reg_307 = ap_const_lv2_3)) or ((ap_const_logic_1 = ap_CS_fsm_state5) and (mod_value_load_reg_307 = ap_const_lv2_1)) or ((ap_const_logic_1 = ap_CS_fsm_state5) and (mod_value_load_reg_307 = ap_const_lv2_2)))) then 
            grp_FIR_filter_2_fu_137_x_n <= y2;
        elsif ((((ap_const_logic_1 = ap_CS_fsm_state2) and (mod_value_load_reg_307 = ap_const_lv2_3)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (mod_value_load_reg_307 = ap_const_lv2_1)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (mod_value_load_reg_307 = ap_const_lv2_2)))) then 
            grp_FIR_filter_2_fu_137_x_n <= data_in_reg_301;
        else 
            grp_FIR_filter_2_fu_137_x_n <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_FIR_filter_fu_157_FIR_delays_q0_assign_proc : process(H_filter_FIR_dec_40_q0, H_filter_FIR_int_40_q0, ap_CS_fsm_state10, mod_value_load_reg_307, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) and (mod_value_load_reg_307 = ap_const_lv2_0))) then 
            grp_FIR_filter_fu_157_FIR_delays_q0 <= H_filter_FIR_int_40_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_FIR_filter_fu_157_FIR_delays_q0 <= H_filter_FIR_dec_40_q0;
        else 
            grp_FIR_filter_fu_157_FIR_delays_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_FIR_filter_fu_157_FIR_delays_q1_assign_proc : process(H_filter_FIR_dec_40_q1, H_filter_FIR_int_40_q1, ap_CS_fsm_state10, mod_value_load_reg_307, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) and (mod_value_load_reg_307 = ap_const_lv2_0))) then 
            grp_FIR_filter_fu_157_FIR_delays_q1 <= H_filter_FIR_int_40_q1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_FIR_filter_fu_157_FIR_delays_q1 <= H_filter_FIR_dec_40_q1;
        else 
            grp_FIR_filter_fu_157_FIR_delays_q1 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_FIR_filter_fu_157_ap_start <= grp_FIR_filter_fu_157_ap_start_reg;

    grp_FIR_filter_fu_157_shift_assign_proc : process(ap_CS_fsm_state10, mod_value_load_reg_307, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) and (mod_value_load_reg_307 = ap_const_lv2_0))) then 
            grp_FIR_filter_fu_157_shift <= ap_const_lv3_5;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_FIR_filter_fu_157_shift <= ap_const_lv3_7;
        else 
            grp_FIR_filter_fu_157_shift <= "XXX";
        end if; 
    end process;


    grp_FIR_filter_fu_157_x_n_assign_proc : process(ap_CS_fsm_state10, mod_value_load_reg_307, data_in_reg_301, y_reg_314, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) and (mod_value_load_reg_307 = ap_const_lv2_0))) then 
            grp_FIR_filter_fu_157_x_n <= y_reg_314;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_FIR_filter_fu_157_x_n <= data_in_reg_301;
        else 
            grp_FIR_filter_fu_157_x_n <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    input_r_TDATA_blk_n_assign_proc : process(ap_CS_fsm_state1, input_r_TVALID_int_regslice)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            input_r_TDATA_blk_n <= input_r_TVALID_int_regslice;
        else 
            input_r_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    input_r_TREADY <= regslice_both_input_r_U_ack_in;

    input_r_TREADY_int_regslice_assign_proc : process(ap_CS_fsm_state1, input_r_TVALID_int_regslice)
    begin
        if (((input_r_TVALID_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            input_r_TREADY_int_regslice <= ap_const_logic_1;
        else 
            input_r_TREADY_int_regslice <= ap_const_logic_0;
        end if; 
    end process;

    mod_value_load_load_fu_194_p1 <= mod_value;

    output_r_TDATA_blk_n_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state11, output_r_TREADY_int_regslice)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            output_r_TDATA_blk_n <= output_r_TREADY_int_regslice;
        else 
            output_r_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    output_r_TVALID <= regslice_both_output_r_U_vld_out;

    output_r_TVALID_int_regslice_assign_proc : process(ap_CS_fsm_state10, ap_block_state10_on_subcall_done, output_r_TREADY_int_regslice)
    begin
        if ((not(((output_r_TREADY_int_regslice = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state10_on_subcall_done))) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            output_r_TVALID_int_regslice <= ap_const_logic_1;
        else 
            output_r_TVALID_int_regslice <= ap_const_logic_0;
        end if; 
    end process;

    x_n_fu_262_p2 <= std_logic_vector(unsigned(add_ln25_1_fu_256_p2) + unsigned(add_ln25_fu_250_p2));
end behav;
